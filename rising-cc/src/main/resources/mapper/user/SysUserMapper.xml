<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rising.cc.dao.user.SysUserDao">


	<sql id="columnSysUserByAll">
		u.id,
		u.userName,
		u.userPwd,
		u.status,
		u.isBuilt,
		u.note
	</sql>

	<select id="findSysUserByUserName" parameterType="String" resultType="SysUser">
		select 
		<include refid="columnSysUserByAll"/>
		from t_sys_user u where u.userName = #{userName,jdbcType=VARCHAR} and u.status <![CDATA[<>80]]>
	</select>

	<select id="findSysUserByUserId" parameterType="int" resultType="SysUser">
		select 
		<include refid="columnSysUserByAll"/>
		from t_sys_user u where u.id = #{userId,jdbcType=INTEGER}
	</select>
	
	<insert id="saveSysUser" parameterType="SysUser" >
			insert into t_sys_user(userName,
													userPwd,
													status,
													isBuilt,
													note)
						values(#{userName,jdbcType=VARCHAR},
									#{userPwd,jdbcType=VARCHAR},
									#{status,jdbcType=INTEGER},
									#{isBuilt,jdbcType=INTEGER},
									#{note,jdbcType=VARCHAR})
			 <selectKey keyProperty="id" resultType="Integer" order="AFTER">
				select LAST_INSERT_ID() as id
			</selectKey> 
	</insert>
	
	<update id="updateSysUserById" parameterType="SysUser">
		update t_sys_user 
		<set>
			<if test="userName != null and userName !='' ">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null and userPwd !='' ">
				userPwd = #{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="isBuilt != null">
				isBuilt = #{isBuilt,jdbcType=INTEGER},
			</if>
			<if test="note != null and note !='' ">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				 id = #{id,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateSysUserStatusByIds" >
		update t_sys_user set  status = #{status,jdbcType=INTEGER}
		where id in 
		<foreach collection="ids" open="(" separator="," close=")" item="id">
			#{id,jdbcType=INTEGER}
		</foreach>
	</update>

	<delete id="deleteOldUserRoleByUserId"  parameterType="int">
		delete from t_sys_user_role where userId = #{userId,jdbcType=INTEGER}
	</delete>

	<delete id="deleteOldUserEnvirByUserId" >
		delete from t_sys_user_envir where userId = #{userId,jdbcType=INTEGER} and envirId in 
		<foreach collection="list" item="envirId" index="index" open="(" separator=","  close=")">  
	        #{envirId,jdbcType=INTEGER}
	    </foreach>  
	</delete>

	<insert id="insertBatchUserRole" parameterType="List">
		insert into t_sys_user_role (userId,roleId,createTime,createUser)   
	    values  
	    <foreach collection="list" item="item" index="index" open="" separator=","  close="">  
	        (#{item.userId,jdbcType=INTEGER},#{item.roleId,jdbcType=INTEGER},#{item.createTime,jdbcType=TIMESTAMP},#{item.createUser,jdbcType=VARCHAR})
	    </foreach>  
	</insert>

	<insert id="insertBatchUserEnvir" parameterType="List">
		insert into t_sys_user_envir (userId,envirId,createTime,createUser)   
	    values  
	    <foreach collection="list" item="item" index="index" open="" separator=","  close="">  
	        (#{item.userId,jdbcType=INTEGER},#{item.envirId,jdbcType=INTEGER},#{item.createTime,jdbcType=TIMESTAMP},#{item.createUser,jdbcType=VARCHAR})
	    </foreach>  
	</insert>
	
		
	<update id="updateBatchUserPwd" parameterType="List">
		update t_sys_user 
		<set>
			userPwd = case id 
			<foreach collection="list" item="item" index="index" open="" separator=""  close="">
		        when  #{item.id,jdbcType=INTEGER} THEN  #{item.userPwd,jdbcType=VARCHAR}
		    </foreach> else null end
        </set>
		where id in 
		<foreach collection="list" item="item" index="index" open="(" separator=","  close=")">
	        #{item.id,jdbcType=INTEGER}
	    </foreach>  
	</update>
	
</mapper>