<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rising.cc.dao.api.ApiAccountDao">
	
	<sql id="columnApiAccountByAll">
			c.id,
			c.account,
			c.company,
			c.description,
			c.sendIp,
			c.secretKey,
			c.status,
			c.createTime,
			c.createUser
	</sql>
	
	<sql id="whereConditionPagination">
		<if test="condition != null">
			<if test="condition.envirId != null">
				and c.envirId = #{condition.envirId,jdbcType=INTEGER}
			</if>
		</if>
	</sql>
	
	<select id="findApiAccountListByPagination" parameterType="Pagination" resultType="ApiAccount">
		select * from (
			select <include refid="columnApiAccountByAll"/>
			 from t_api_account c inner join t_envir_type t on c.envirId = t.id 
 			<include refid="common.whereConditionPagination"/>
			<include refid="whereConditionPagination"/>
			<include refid="common.sortConditionPagination"/>
		)
		 t limit 
			<![CDATA[
				#{startIndex} ,#{pageSize}
			]]>
	</select>
	
	<select id="countApiAccountListByPagination" parameterType="Pagination" resultType="Integer">
		select count(1) from t_api_account c inner join t_envir_type t on c.envirId = t.id 
 			<include refid="common.whereConditionPagination"/>
			<include refid="whereConditionPagination"/>
	</select>
	
	<update id="updateApiAccount" parameterType="ApiAccount">
        update t_api_account
        <set>
        	<if test="envirId != null">
	            envirId = #{envirId , jdbcType=INTEGER},
        	</if>
        	<if test="account != null and account != '' ">
	            account = #{account , jdbcType=VARCHAR},
        	</if>
        	<if test="company != null and company != '' ">
	            company = #{company , jdbcType=VARCHAR},
        	</if>
        	<if test="description != null and description != '' ">
	            description = #{description , jdbcType=VARCHAR},
        	</if>
        	<if test="sendIp != null and sendIp != '' ">
	            sendIp = #{sendIp , jdbcType=VARCHAR},
        	</if>
        	<if test="secretKey != null and secretKey != '' ">
	            secretKey = #{secretKey , jdbcType=VARCHAR},
        	</if>
        	<if test="status != null">
	            status = #{status , jdbcType=INTEGER},
        	</if>
        </set>
        where id = #{id , jdbcType=INTEGER}
	</update>
	
	<delete id="deleteBatchApiAccount" parameterType="List">
		delete from t_api_account where id in 
		<foreach collection="list" item="id" open="(" separator="," close=")">
			 #{id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<insert id="insertApiAccount" parameterType="ApiAccount">
		insert into t_api_account(
				envirId,
				account,
				company,
				description,
				sendIp,
				secretKey,
				status,
				createTime,
				createUser
		) values(
			#{envirId,jdbcType=INTEGER},
			#{account,jdbcType=VARCHAR},
			#{company,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR},
			#{sendIp,jdbcType=VARCHAR},
			#{secretKey,jdbcType=VARCHAR},
			#{status,jdbcType=INTEGER},
			#{createTime,jdbcType=TIMESTAMP},
			#{createUser,jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="findApiAccountListByQo" parameterType="BaseQo" resultType="ApiAccount">
		select 
			<include refid="columnApiAccountByAll"/>
			 from t_api_account c inner join  t_envir_type t on c.envirId = t.id 
			 <where>
			 	<if test="envirId != null">
			 		and c.envirId = #{envirId,jdbcType=INTEGER}
			 	</if>
			 	<if test="envirCode != null and envirCode!='' ">
			 		and t.envirCode = #{envirCode,jdbcType=VARCHAR}
			 	</if>
			 	<if test="account != null and account != '' ">
			 		and c.account = #{account,jdbcType=VARCHAR}
			 	</if>
			 	<if test="status != null">
			 		and c.status = #{status,jdbcType=INTEGER}
			 	</if>
			 </where> 
	</select>
	
</mapper>