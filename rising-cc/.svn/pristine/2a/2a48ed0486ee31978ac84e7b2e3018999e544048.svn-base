<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rising.cc.dao.project.EnginConfigTypeDao">

	<resultMap type="EnginConfigType" id="enginConfigTypeMap">
		<result property="id" column="id"/>
		<result property="engin.id" column="engin_Id"/>
		<result property="engin.engineeringName" column="engin_engineeringName"/>
		<result property="engin.engineeringCode" column="engin_engineeringCode"/>
		<result property="configName" column="configName"/>
		<result property="fileName" column="fileName"/>
		<result property="status" column="status"/>
		<result property="createTime" column="createTime"/>
		<result property="createUser" column="createUser"/>
	</resultMap>	


	<sql id="columnEnginConfigTypeByAll">
		e.id,
		t.id as engin_Id,
		t.engineeringName as engin_engineeringName,
		t.engineeringCode as engin_engineeringCode,
		e.configName,
		e.fileName,
		e.status,
		e.createTime,
		e.createUser
	</sql>
	
	<select id="findEnginConfigTypeListByPagination" parameterType="Pagination" resultMap="enginConfigTypeMap">
		select * from (
			select <include refid="columnEnginConfigTypeByAll"/>
			 from t_engin_config_type e 	left join t_engineering t on t.id = e.enginId 
			<include refid="common.whereConditionPagination"/>
			<include refid="common.sortConditionPagination"/>
		)
		 t limit 
			<![CDATA[
				#{startIndex} ,#{pageSize}
			]]>
	</select>
	
	<select id="countEnginConfigTypeListByPagination" parameterType="Pagination" resultType="Integer">
		select count(1) from t_engin_config_type e  left join t_engineering t on t.id = e.enginId 
		<include refid="common.whereConditionPagination"/>
	</select>
	
	<update id="updateEnginConfigType" parameterType="EnginConfigType">
        update t_engin_config_type
        <set>
        	<if test="enginId != null">
				enginId = #{enginId,jdbcType=INTEGER},
        	</if>
        	<if test="configName != null">
	            configName = #{configName , jdbcType=VARCHAR},
        	</if>
        	<if test="fileName != null">
	            fileName = #{fileName , jdbcType=VARCHAR},
        	</if>
        	<if test="status != null">
	            status = #{status , jdbcType=INTEGER},
        	</if>
        </set>
        where id = #{id , jdbcType=INTEGER}
	</update>
	
	<delete id="deleteEnginConfigType" parameterType="EnginConfigType">
		delete from t_engin_config_type where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteBatchEnginConfigType" parameterType="List">
		delete from t_engin_config_type where id in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			 #{id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<delete id="deleteBatchEnginConfigTypeByEnginIds" parameterType="List">
		delete from t_engin_config_type where enginId in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			 #{id,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<delete id="deleteEnginConfigTypeByProjectIds" parameterType="List">
		delete from t_engin_config_type where enginId in (
			select e.id from t_engineering e where e.projectId in 
			<foreach collection="list" item="id" open="(" separator="," close=")">
				 #{id,jdbcType=INTEGER}
			</foreach>
		)
	</delete>
	
	<insert id="insertEnginConfigType" parameterType="EnginConfigType">
		insert into t_engin_config_type(
				enginId,
				configName,
				fileName,
				status,
				createTime,
				createUser
		) values(
			#{enginId,jdbcType=INTEGER},
			#{configName,jdbcType=VARCHAR},
			#{fileName,jdbcType=VARCHAR},
			#{status,jdbcType=INTEGER},
			#{createTime,jdbcType=TIMESTAMP},
			#{createUser,jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="findEnginConfigTypeListByQo" parameterType="BaseQo" resultMap="enginConfigTypeMap">
		select 
		<include refid="columnEnginConfigTypeByAll"/>
			from t_engin_config_type e  	left join t_engineering t on t.id = e.enginId 
			<where>
				<if test="status != null">
					and e.status = #{status,jdbcType=INTEGER}
				</if>
				<if test="arePublic == null or arePublic == false ">
					<if test="enginId != null">
						and e.enginId = #{enginId,jdbcType=INTEGER} 
					</if>
				</if>
				<if test="arePublic != null and arePublic == true ">
					<if test="enginId != null">
						and (e.enginId = #{enginId,jdbcType=INTEGER} or e.enginId = 0) 
					</if>
				</if>
			</where>
	</select>
	
</mapper>