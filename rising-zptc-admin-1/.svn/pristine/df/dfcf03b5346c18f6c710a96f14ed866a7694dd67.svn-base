<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
       default-autowire="byName">
	
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- <bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter " /> -->
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /> 
			</list>
		</property>
	</bean>
	
<!-- 	<mvc:interceptors>  
	    使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求  
	    <bean class="com.rising.filter.MenuInterceptor"/>
	    <mvc:interceptor>  
	        <mvc:mapping path="/test/sss"/>  
	        定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
	        <bean class="com.**.**.LoginInterceptor"/>  
	    </mvc:interceptor>  
	</mvc:interceptors>   -->
		
	<!-- 放过springmvc拦截的配置信息 -->
 	<mvc:resources mapping="/resources/**" location="/resources/" />
		
		<!-- controller 扫描器 -->
 	<mvc:annotation-driven />
	<context:component-scan base-package="com.bhyf.controller" />


	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8">
		<!-- 设置上传文件的最大尺寸为2MB -->
		<property name="maxUploadSize">
			<value>20480000</value>
		</property>
	</bean>

	<!-- FreeMarker视图解析 在这里配置后缀名ftl和视图解析器。。 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:/properties/freemarker.properties" />
	</bean>

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<bean id="freemarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="com.bhyf.myview.MyFreeMarkerView" />
		<property name="viewNames" value="*.html" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value="" />
		<property name="order" value="2" />
		<property name="exposeSpringMacroHelpers" value="true" />
		
	</bean>
	
	
	
</beans>